@import url(https://fonts.googleapis.com/css?family=Playfair+Display:700i|Source+Sans+Pro:400,700);.frontSectionStyles{background:#fff;color:#505050;padding-top:60px;position:relative;z-index:2}#splash .container .verse blockquote,.headlineTypography,h1,h2,h3,h4,h5,h6{font-family:'Playfair Display',serif;font-weight:700;font-style:italic}/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*{box-sizing:border-box}html{font-size:10px}body{font-family:"Source Sans Pro",sans-serif;line-height:1.3}ul{list-style-type:none;margin:0;padding:0}address,blockquote,dl,form,ol,p,pre,small,ul{font-size:1.8rem}pre{overflow:scroll}h1{font-size:4.5rem}h2{font-size:4rem}h3{font-size:3.5rem}h4{font-size:3rem}h5{font-size:2.5rem}h6{font-size:2rem}a{text-decoration:none}a:hover{text-decoration:underline}@media all and (min-width:991px){h1{font-size:4.5rem}h2{font-size:4rem}h3{font-size:3.5rem}h4{font-size:3rem}h5{font-size:2.5rem}h6{font-size:2rem}}.section{min-height:100vh}.container{margin:0 auto;width:100%;padding:0 3rem}@media all and (min-width:991px){.container{max-width:1000px;padding:0}}@media all and (min-width:415px){.row{display:flex;justify-content:space-between;padding-bottom:1.5em}.col20{width:18.999%}.col30{width:28.999%}.col40{width:38.999%}.col50{width:48.999%}.col60{width:58.999%}.col70{width:68.999%}.col80{width:78.999%}}#navbar{position:sticky;top:0;background:#fff;width:100%;padding-top:2rem}#navbar .logo{margin:0;padding:0}#navbar .nav-menu li{display:inline-block}#navbar .nav-menu li a{padding:2rem;font-family:'Source Sans Pro',sans-serif;text-transform:uppercase;color:#5c5c5c;font-weight:700;font-size:1.4rem;letter-spacing:.15em}#navbar .nav-menu li a:hover{text-decoration:none}#splash{background:url(../images/ebenezerbaptistjc.jpg);background-size:cover;height:100vh;position:relative}#splash .container{position:absolute;right:0;bottom:100px;width:50%}#splash .container .verse{color:#fff}#splash .container .verse blockquote{text-align:center;font-size:4.6rem;letter-spacing:1px;text-shadow:2px 2px #000;margin:1rem 0}#splash .container .verse figcaption{text-align:right;font-size:1.3rem}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
